% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DE_bind_Peak.R
\name{PlotDEbPeak}
\alias{PlotDEbPeak}
\title{Create Integrated Summary Plot.}
\usage{
PlotDEbPeak(
  de.peak,
  peak.type = c("ChIP", "ATAC", "Peak"),
  peak.mode = c("consenus", "diff"),
  ...
)
}
\arguments{
\item{de.peak}{Dataframe contains integrated results.}

\item{peak.type}{The source of peaks, chosen from ATAC, ChIP and Peak (ChIP and ATAC). Default: ChIP.}

\item{peak.mode}{The source of peak results, choose from consenus (peak annotation) and diff (differential expression analysis).
Default: consenus.}

\item{...}{Parameters for \code{\link{ggvenn}}.}
}
\value{
A ggplot2 object.
}
\description{
Create Integrated Summary Plot.
}
\examples{
library(DEbPeak)
library(DESeq2)
# ChIP-Seq data
peak.file <- system.file("extdata", "debchip_peaks.bed", package = "DEbPeak")
peak.df <- GetConsensusPeak(peak.file = peak.file)
peak.profile <- PeakProfile(peak.df, species = "Mouse", by = "gene", region.type = "body", nbin = 800)
peak.anno <- AnnoPeak(
  peak.df = peak.df, species = "Mouse",
  seq.style = "UCSC", up.dist = 20000, down.dist = 20000
)
# RNA-Seq data
count.file <- system.file("extdata", "debchip_count.txt", package = "DEbPeak")
meta.file <- system.file("extdata", "debchip_meta.txt", package = "DEbPeak")
count.matrix <- read.table(file = count.file, header = TRUE, sep = "\t")
meta.info <- read.table(file = meta.file, header = TRUE)
# create DESeqDataSet object
dds <- DESeq2::DESeqDataSetFromMatrix(
  countData = count.matrix, colData = meta.info,
  design = ~condition
)
# set control level
dds$condition <- relevel(dds$condition, ref = "NF")
# conduct differential expressed genes analysis
dds <- DESeq(dds)
# extract results
dds.results <- results(dds, contrast = c("condition", "RX", "NF"))
dds.results.ordered <- dds.results[order(dds.results$log2FoldChange, decreasing = TRUE), ]
# Integrated with RNA-Seq
debchip.res <- DEbPeak(
  de.res = dds.results.ordered, peak.res = peak.anno[["df"]],
  peak.anno.key = "Promoter", merge.key = "SYMBOL"
)
# DE and ChIP venn plot
debchip.plot <- PlotDEbPeak(de.peak = debchip.res, peak.type = "ChIP", show_percentage = FALSE)
}
