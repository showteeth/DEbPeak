% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DE_bind_Peak.R
\name{InteFE}
\alias{InteFE}
\title{GO Enrichment on Integrated Results.}
\usage{
InteFE(
  inte.res,
  fe.key,
  inte.type = c("DEbPeak", "PeakbPeak", "DEbDE"),
  out.folder = NULL,
  gene.type = c("ENSEMBL", "ENTREZID", "SYMBOL"),
  go.type = c("ALL", "BP", "MF", "CC"),
  enrich.pvalue = 0.05,
  enrich.qvalue = 0.05,
  species = c("Human", "Mouse", "Rat", "Fly", "Arabidopsis", "Yeast", "Zebrafish",
    "Worm", "Bovine", "Pig", "Chicken", "Rhesus", "Canine", "Xenopus", "Anopheles",
    "Chimp", "E coli strain Sakai", "Myxococcus xanthus DK 1622"),
  padj.method = c("BH", "holm", "hochberg", "hommel", "bonferroni", "BY", "fdr",
    "none"),
  show.term = 15,
  str.width = 30,
  plot.resolution = 300,
  plot.width = 7,
  plot.height = 9,
  save = TRUE
)
}
\arguments{
\item{inte.res}{Integration results, can be output of \code{DEbPeak}, \code{PeakbPeak}, \code{DEbDE}.}

\item{fe.key}{The key type of integrated results ("Type" column of \code{inte.res}) to perform functional enrichment.}

\item{inte.type}{The integration type, choose from "DEbDE", "PeakbPeak", "DEbPeak". Default: "DEbPeak".}

\item{out.folder}{Folder to save enrichment results. Default: wording directory.}

\item{gene.type}{Gene name type (if \code{inte.res} is from \code{DEbPeak}, this should be ENTREZID; if \code{inte.res} is from \code{PeakbPeak},
this should be Gene name type of P1_Gene; if \code{inte.res} is from \code{DEbDE}, this should be Gene name type of DE1_Gene).
Chosen from ENSEMBL, ENTREZID,SYMBOL. Default: ENSEMBL.}

\item{go.type}{GO enrichment type, chosen from ALL, BP, MF, CC. Default: ALL.}

\item{enrich.pvalue}{Cutoff value of pvalue. Default: 0.05.}

\item{enrich.qvalue}{Cutoff value of qvalue. Default: 0.05.}

\item{species}{Species used, chosen from "Human","Mouse","Rat","Fly","Arabidopsis","Yeast","Zebrafish","Worm","Bovine","Pig","Chicken","Rhesus",
"Canine","Xenopus","Anopheles","Chimp","E coli strain Sakai","Myxococcus xanthus DK 1622". Default: "Human".}

\item{padj.method}{One of "holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none". Default: BH.}

\item{show.term}{Number of enrichment term to show. Default: 15.}

\item{str.width}{Length of enrichment term in plot. Default: 30.}

\item{plot.resolution}{Resolution of plot. Default: 300.}

\item{plot.width}{The width of plot. Default: 7.}

\item{plot.height}{The height of plot. Default: 9.}

\item{save}{Logical value, whether to save all results. Default: TRUE.}
}
\value{
If \code{save} is TRUE, return NULL (all results are in \code{out.folder}), else retutn result dataframe.
}
\description{
GO Enrichment on Integrated Results.
}
\examples{
library(DEbPeak)
#### RNA-seq and RNA-seq
rna.diff.file <- system.file("extdata", "RA_RNA_diff.txt", package = "DEbPeak")
de1.res <- read.table(file = rna.diff.file, header = TRUE, sep = "\t")
de2.res <- read.table(file = rna.diff.file, header = TRUE, sep = "\t")
# use same file as example
de.de <- DEbDE(de1.res = de1.res, de2.res = de2.res, de1.l2fc.threshold = 0.5, de2.l2fc.threshold = 1)
de.de.fe <- InteFE(
  inte.res = de.de, fe.key = "Down_Down", inte.type = "DEbDE", gene.type = "SYMBOL", go.type = "BP",
  species = "Mouse", save = F
)
#### peak-related and peak-related
# ChIP-seq data
chip.file <- system.file("extdata", "debchip_peaks.bed", package = "DEbPeak")
chip.df <- GetConsensusPeak(peak.file = chip.file)
chip.anno <- AnnoPeak(
  peak.df = chip.df, species = "Mouse",
  seq.style = "UCSC", up.dist = 20000, down.dist = 20000
)
# ATAC-seq data
atac.file <- system.file("extdata", "debatac_peaks.bed", package = "DEbPeak")
atac.df <- GetConsensusPeak(peak.file = atac.file)
atac.anno <- AnnoPeak(
  peak.df = atac.df, species = "Mouse",
  seq.style = "UCSC", up.dist = 20000, down.dist = 20000
)
# integrate
chip.atac <- PeakbPeak(peak1.res = chip.anno$df, peak2.res = atac.anno$df, peak.mode = "consensus", peak.anno.key = "Promoter")
# functional enrichment
chip.atac.fe <- InteFE(
  inte.res = chip.atac, fe.key = "Common", inte.type = "PeakbPeak", gene.type = "SYMBOL",
  go.type = "BP", species = "Mouse", save = FALSE
)
#### RNA-seq and peak-related
library(DESeq2)
# ChIP-Seq data
peak.file <- system.file("extdata", "debchip_peaks.bed", package = "DEbPeak")
peak.df <- GetConsensusPeak(peak.file = peak.file)
peak.profile <- PeakProfile(peak.df, species = "Mouse", by = "gene", region.type = "body", nbin = 800)
peak.anno <- AnnoPeak(
  peak.df = peak.df, species = "Mouse",
  seq.style = "UCSC", up.dist = 20000, down.dist = 20000
)
# RNA-Seq data
count.file <- system.file("extdata", "debchip_count.txt", package = "DEbPeak")
meta.file <- system.file("extdata", "debchip_meta.txt", package = "DEbPeak")
count.matrix <- read.table(file = count.file, header = TRUE, sep = "\t")
meta.info <- read.table(file = meta.file, header = TRUE)
# create DESeqDataSet object
dds <- DESeq2::DESeqDataSetFromMatrix(
  countData = count.matrix, colData = meta.info,
  design = ~condition
)
# set control level
dds$condition <- relevel(dds$condition, ref = "NF")
# conduct differential expressed genes analysis
dds <- DESeq(dds)
# extract results
dds.results <- results(dds, contrast = c("condition", "RX", "NF"))
dds.results.ordered <- dds.results[order(dds.results$log2FoldChange, decreasing = TRUE), ]
# Integrated with RNA-Seq
debchip.res <- DEbPeak(
  de.res = dds.results.ordered, peak.res = peak.anno[["df"]],
  peak.anno.key = "Promoter", merge.key = "SYMBOL"
)
# functional enrichment on UPbPeak genes
upbpeak.fe.results <- InteFE(
  inte.res = debchip.res, fe.key = "UPbPeak", inte.type = "DEbPeak", gene.type = "ENTREZID",
  species = "Mouse", save = FALSE
)
}
