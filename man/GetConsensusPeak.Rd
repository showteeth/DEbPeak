% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Consensus_peak.R
\name{GetConsensusPeak}
\alias{GetConsensusPeak}
\title{Get Consensus Peak with MSPC.}
\usage{
GetConsensusPeak(
  peak.file,
  peak.folder = NULL,
  mspc.path = NULL,
  rep.type = c("bio", "tec"),
  stringency.threshold = 1e-08,
  weak.threshold = 1e-04,
  gamma = 1e-08,
  alpha = 0.05,
  min.overlap.num = 1,
  multiple.intersections = c("Lowest", "Highest"),
  parallelism.degree = 1
)
}
\arguments{
\item{peak.file}{Peak files (two or more file: get consensus peak; one file: read directly)
obtained from peak caller, eg: MACS2 (without header).}

\item{peak.folder}{The folder contains peak files. Default: NULL.}

\item{mspc.path}{MSPC path. Default: NULL (conduct automatic detection).}

\item{rep.type}{Replicate type, chosen from bio (biological) and tec (technical).}

\item{stringency.threshold}{Set a threshold on p-values, where peaks with p-value lower than this threshold, are considered stringent. Default: 1e-8.}

\item{weak.threshold}{Set a threshold on p-values, such that peaks with p-value between this and stringency threshold, are considered weak peaks. Default: 1e-4.}

\item{gamma}{Set the combined stringency threshold. Peaks with combined p-value below this threshold are confirmed. Default: 1e-8.}

\item{alpha}{Set the threshold for Benjamini-Hochberg multiple testing correction. Default: 0.05.}

\item{min.overlap.num}{Set the minimum number of overlapping peaks required before MSPC combines their p-value. Default: 1.}

\item{multiple.intersections}{When multiple peaks from a sample overlap with a given peak,
this argument defines which of the peaks to be considered: the one with lowest p-value, or the one with highest p-value?
Chosen from Lowest and Highest. Default: Lowest.}

\item{parallelism.degree}{Set the number of parallel threads MSPC can utilize simultaneously when processing data. Default: 1.}
}
\value{
A dataframe contains all consensus peak.
}
\description{
Get Consensus Peak with MSPC.
}
\examples{
library(DEbPeak)
peak.file <- system.file("extdata", "debchip_peaks.bed", package = "DEbPeak")
peak.df <- GetConsensusPeak(peak.file = peak.file)
}
